openapi: 3.0.0
info:
  title: API Rest Jokes
  description: API para manejar chistes, operaciones matemáticas, usuarios y temas.
  version: 1.0.0

servers:
  - url: http://localhost:3000
    description: Servidor local

paths:
  /jokes/{type}:
    get:
      summary: Obtener un chiste aleatorio
      parameters:
        - name: type
          in: path
          description: Tipo de chiste (Chuck o Dad)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Chiste obtenido correctamente
        '400':
          description: Tipo de chiste no válido
  /jokes:
    post:
      summary: Crear un chiste
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                body:
                  type: string
                themeIds:
                  type: array
                  items:
                    type: integer
      responses:
        '201':
          description: Chiste creado correctamente
        '400':
          description: Error en la creación del chiste
        '500':
          description: Error del servidor
    delete:
      summary: Eliminar un chiste
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Chiste eliminado correctamente
        '404':
          description: Chiste no encontrado
  /jokes/{id}:
    put:
      summary: Actualizar un chiste
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                body:
                  type: string
      responses:
        '200':
          description: Chiste actualizado correctamente
        '404':
          description: Chiste no encontrado
  /jokes/search:
    delete:
      summary: Buscar chistes en Elasticsearch
      security:
        - bearerAuth: []
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Chistes encontrados correctamente
        '400':
          description: Parámetro de búsqueda no válido

  /math/lcm:
    get:
      summary: Obtener el MCM de una lista de números
      parameters:
        - name: numbers
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: MCM calculado correctamente
        '400':
          description: Parámetro de números no válido

  /math/increment:
    get:
      summary: Incrementar un número en 1
      parameters:
        - name: number
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Número incrementado correctamente
        '400':
          description: Parámetro de número no válido

  /users/register:
    post:
      summary: Registrar un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: Usuario registrado correctamente
        '400':
          description: Error en el registro del usuario
        '500':
          description: Error del servidor

  /users/login:
    post:
      summary: Iniciar sesión de usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Inicio de sesión correcto
        '401':
          description: Credenciales inválidas
        '500':
          description: Error del servidor

  /themes:
    post:
      summary: Crear un tema
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '201':
          description: Tema creado correctamente
        '400':
          description: Error en la creación del tema
        '500':
          description: Error del servidor
    get:
      summary: Obtener la lista de temas
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de temas obtenida correctamente
        '500':
          description: Error del servidor

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
